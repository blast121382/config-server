server:
    port: ${CUSTOM.SERVER.PORT:9090}
eureka:
    instance:
     prefer-ip-address: true
     lease-expiration-duration-in-seconds: 30
    client:
        register-with-eureka: true
        service-url:
            defaultZone: ${EUREKA.SERVER.HOSTNAME:http://localhost:8761/eureka}
        fetchRegistry: true
resilience4j:
 circuitbreaker:
  configs:
   mitocodeCircuitbreakerProduct:
    slidingWindowSize: 20
    failureRateThreshold: 75
    waitDurationInOpenState: 30s
    permittedNumberOfCallsInHalfOpenState: 10
    slowCallDurationThreshold: 2s
    slowCallRateThreshold: 10
  instances:
   product-cb:
    base-config: mitocodeCircuitbreakerProduct
 timelimiter:
  configs:
   mitocodeTimeLimiterProduct:
    timeoutDuration: 1s
  instances:
   product-time:
    base-config: mitocodeTimeLimiterProduct
    
spring:
 cloud:
  gateway:
   routes:
    - id: user-service
      uri: lb://user-service
      predicates:
       - Path=/api/user-services/**
      filters:
       - StripPrefix=2
       - MitocodeFilter=MitocodeKey,MitocodeValue
    - id: product-service
      uri: lb://product-service
      predicates:
       - Path=/api/product-services/**
      filters:
       - StripPrefix=2
       #- AddRequestParameter=tokens,mitocode
       #- AddRequestHeader=token,mitocode
       #- AddResponseHeader=CUSTOM_RESPONSE_HEADER,HEADER_mitocode
       - MitocodeFilter=Mitocode,MitocodeValue
       #- name: CustomFilter
       #  args:
       #   headerKey: MitocodeKey
       #   headerValue: MitocodeValue
       - name: CircuitBreaker
         args:
          name: product-cb
          statusCodes: 400, 401, 403, 404, 500, 503, 504
      #    fallbackUri: forward:/api/user-services/user

logging:
 level:
  org:
   springframework:
    cloud:
     gateway: DEBUG
